<config>
{
  navigationBarTitleText: '图表',
  "usingComponents": {
    "f2-canvas": "module:antv-f2-wx",
  }
}
</config>
<template>
  <div class="container">
    <div class="chart">
      <f2-canvas id="chart" :onInit="onInitChart" @on-chart-ready-event="onChartReady" />
    </div>
  </div>
</template>
<script>
import wepy from '@wepy/core';
import _ from 'lodash';

wepy.page({
  data: {
    onInitChart(F2, config) {
      const chart = new F2.Chart(config);
      return chart;
    }
  },
  onLoad(options) {
    console.log(options);
    wx.setNavigationBarTitle({
      title: options.title
    });
  },
  methods: {
    onChartReady() {
      const that = this;
      wx.request({
        url:
          'https://gw.alipayobjects.com/os/antfincdn/OVMtvjbnut/series-line.json',
        success(res) {
          console.log(res.data);
          let chartComp = that.$wx.selectComponent('#chart');
          console.log(chartComp);

          let chart = chartComp.chart;
          chart.source(res.data);
          chart.scale('date', {
            type: 'timeCat',
            tickCount: 3
          });
          chart.scale('value', {
            tickCount: 5
          });
          chart.axis('date', {
            label: function label(text, index, total) {
              // 只显示每一年的第一天
              const textCfg = {};
              if (index === 0) {
                textCfg.textAlign = 'left';
              } else if (index === total - 1) {
                textCfg.textAlign = 'right';
              }
              return textCfg;
            }
          });
          chart.tooltip({
            custom: true, // 自定义 tooltip 内容框
            onChange: function onChange(obj) {
              const legend = chart.get('legendController').legends.top[0];
              const tooltipItems = obj.items;
              const legendItems = legend.items;
              const map = {};
              legendItems.forEach(function(item) {
                map[item.name] = _.clone(item);
              });
              tooltipItems.forEach(function(item) {
                const name = item.name;
                const value = item.value;
                if (map[name]) {
                  map[name].value = value;
                }
              });
              legend.setItems(_.values(map));
            },
            onHide: function onHide() {
              const legend = chart.get('legendController').legends.top[0];
              legend.setItems(chart.getLegendItems().country);
            }
          });
          chart
            .line()
            .position('date*value')
            .color('type');
          chart.render();
        }
      });
    }
  }
});
</script>
<style scoped>
.container .chart {
  width: 100%;
  height: 200px;
}
</style>
